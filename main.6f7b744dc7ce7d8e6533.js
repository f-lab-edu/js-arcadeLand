(()=>{"use strict";var t,e={489:(t,e,n)=>{function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t){return function(t){if(Array.isArray(t))return i(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return i(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return i(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function a(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(i=o.key,a=void 0,a=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||"default");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(i,"string"),"symbol"===r(a)?a:String(a)),o)}var i,a}var c=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.$target=e,this.props=n,this.render(),this.appendChild(),this.setup(),this.setEvent()}var e,n,r;return e=t,(n=[{key:"setup",value:function(){}},{key:"render",value:function(){var t,e;this.$target.innerHTML=this.setHTML(),null!==(t=this.props)&&void 0!==t&&t.inner&&(e=this.$target).replaceWith.apply(e,o(this.$target.childNodes))}},{key:"setHTML",value:function(){return""}},{key:"appendChild",value:function(){}},{key:"setEvent",value:function(){}},{key:"addEvent",value:function(t,e,n){this.$target.addEventListener(t,(function(t){if(!t.target.closest(e))return!1;n(t)}))}}])&&a(e.prototype,n),r&&a(e,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==s(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===s(i)?i:String(i)),r)}var o,i}function l(t,e){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},l(t,e)}function f(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=p(t);if(e){var o=p(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(t,e){if(e&&("object"===s(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,n)}}function p(t){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},p(t)}var A=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&l(t,e)}(i,t);var e,n,r,o=f(i);function i(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return e=i,(n=[{key:"setHTML",value:function(){return"\n        <h1>TetrisPage</h1>\n        "}}])&&u(e.prototype,n),r&&u(e,r),Object.defineProperty(e,"prototype",{writable:!1}),i}(c);function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==b(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==b(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===b(i)?i:String(i)),r)}var o,i}function d(t,e){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},d(t,e)}function h(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=m(t);if(e){var o=m(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(t,e){if(e&&("object"===b(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,n)}}function m(t){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},m(t)}var v=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&d(t,e)}(i,t);var e,n,r,o=h(i);function i(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return e=i,(n=[{key:"setHTML",value:function(){return"\n        <h1>BallPage</h1>\n        "}}])&&y(e.prototype,n),r&&y(e,r),Object.defineProperty(e,"prototype",{writable:!1}),i}(c);const g=n.p+"924070f9e2750162bd61.png";var C=n(379),w=n.n(C),S=n(795),O=n.n(S),j=n(569),k=n.n(j),x=n(565),P=n.n(x),E=n(216),I=n.n(E),B=n(589),R=n.n(B),_=n(471),T={};T.styleTagTransform=R(),T.setAttributes=P(),T.insert=k().bind(null,"head"),T.domAPI=O(),T.insertStyleElement=I();w()(_.Z,T);_.Z&&_.Z.locals&&_.Z.locals;function z(t){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},z(t)}function L(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==z(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===z(i)?i:String(i)),r)}var o,i}function J(t,e){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},J(t,e)}function M(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=W(t);if(e){var o=W(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(t,e){if(e&&("object"===z(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,n)}}function W(t){return W=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},W(t)}var U=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&J(t,e)}(i,t);var e,n,r,o=M(i);function i(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return e=i,(n=[{key:"setHTML",value:function(){return"\n        <img src=".concat(g,' id="bezelImg"/>\n        <canvas id="retroCanvas" width="1080" height="1080"></canvas>\n        <div id="crt"></div>\n        ')}}])&&L(e.prototype,n),r&&L(e,r),Object.defineProperty(e,"prototype",{writable:!1}),i}(c);function Q(t){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Q(t)}function Y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==Q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==Q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===Q(i)?i:String(i)),r)}var o,i}function q(t,e){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},q(t,e)}function D(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=G(t);if(e){var o=G(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(t,e){if(e&&("object"===Q(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,n)}}function G(t){return G=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},G(t)}var H=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&q(t,e)}(i,t);var e,n,r,o=D(i);function i(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return e=i,(n=[{key:"setHTML",value:function(){return'\n        <div class="retroContainer"></div>\n        '}},{key:"appendChild",value:function(){var t=document.querySelector(".retroContainer");new U(t)}},{key:"setup",value:function(){var t=document.getElementById("retroCanvas"),e=t.getContext("2d"),n=[],r=1,o=1,i=1,a=4,c=4,s=0,u=0,l=20,f=t.width/l,p=t.width/l;document.addEventListener("keydown",(function(t){switch(t.key){case"ArrowLeft":s=-1,u=0;break;case"ArrowUp":s=0,u=-1;break;case"ArrowRight":s=1,u=0;break;case"ArrowDown":s=0,u=1}})),setInterval((function(){e.clearRect(0,0,t.width,t.height),(o+=s)<0&&(o=f-1),o>f&&(o=0),(i+=u)<0&&(i=p-1),i>p-1&&(i=0),e.fillStyle="lime";for(var A=0;A<n.length;A++)e.fillRect(n[A].x*l,n[A].y*l,l-2,l-2),n[A].x===o&&n[A].y===i&&(r=A+1);for(n.push({x:o,y:i});n.length>r;)n.shift();a===o&&c===i&&(r++,a=Math.floor(Math.random()*f),c=Math.floor(Math.random()*p)),e.fillStyle="red",e.fillRect(a*l,c*l,l-2,l-2)}),60)}}])&&Y(e.prototype,n),r&&Y(e,r),Object.defineProperty(e,"prototype",{writable:!1}),i}(c);function N(t){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},N(t)}function Z(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==N(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===N(i)?i:String(i)),r)}var o,i}function F(t,e){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},F(t,e)}function $(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=K(t);if(e){var o=K(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(t,e){if(e&&("object"===N(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,n)}}function K(t){return K=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},K(t)}var X=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&F(t,e)}(i,t);var e,n,r,o=$(i);function i(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return e=i,(n=[{key:"setHTML",value:function(){return"\n        <h1>GalagaPage</h1>\n        "}}])&&Z(e.prototype,n),r&&Z(e,r),Object.defineProperty(e,"prototype",{writable:!1}),i}(c),V=n(770),tt={};tt.styleTagTransform=R(),tt.setAttributes=P(),tt.insert=k().bind(null,"head"),tt.domAPI=O(),tt.insertStyleElement=I();w()(V.Z,tt);V.Z&&V.Z.locals&&V.Z.locals;function et(t){return et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},et(t)}function nt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==et(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==et(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===et(i)?i:String(i)),r)}var o,i}function rt(t,e){return rt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},rt(t,e)}function ot(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=it(t);if(e){var o=it(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(t,e){if(e&&("object"===et(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,n)}}function it(t){return it=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},it(t)}var at=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&rt(t,e)}(i,t);var e,n,r,o=ot(i);function i(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return e=i,(n=[{key:"setHTML",value:function(){return'\n        <div class="progressbarContainer">\n            <label for="progressbar">Loading...</label>\n            <progress class="progressbar" value="0" max="100"></progress>\n        </div>\n            '}}])&&nt(e.prototype,n),r&&nt(e,r),Object.defineProperty(e,"prototype",{writable:!1}),i}(c),ct=n(477),st=n(86),ut=n(867),lt=n(854);const ft=n.p+"c0eb758fb15e1b65d5d0.jpg",pt=n.p+"37f8d6f2ea4094fbaf6f.jpg",At=n.p+"e519624d5227d1df0299.fbx",bt=n.p+"fd2f0dd507b6709350e6.fbx",yt=n.p+"13f1c85bf0bc080f4c77.fbx",dt=n.p+"d8202551db531ed1f700.glb";function ht(t){return ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},ht(t)}function mt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,a,c=[],s=!0,u=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(c.push(r.value),c.length!==e);s=!0);}catch(t){u=!0,o=t}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw o}}return c}}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return vt(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return vt(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function vt(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function gt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==ht(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==ht(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===ht(i)?i:String(i)),r)}var o,i}function Ct(t,e){!function(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t,e),e.add(t)}function wt(t,e,n){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return n}var St=new WeakSet,Ot=new WeakSet,jt=new WeakSet,kt=new WeakSet,xt=new WeakSet,Pt=new WeakSet,Et=new WeakSet,It=new WeakSet,Bt=new WeakSet,Rt=new WeakSet,_t=new WeakSet,Tt=new WeakSet,zt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Ct(this,Tt),Ct(this,_t),Ct(this,Rt),Ct(this,Bt),Ct(this,It),Ct(this,Et),Ct(this,Pt),Ct(this,xt),Ct(this,kt),Ct(this,jt),Ct(this,Ot),Ct(this,St),this.parent=e,wt(this,St,Lt).call(this)}var e,n,r;return e=t,(n=[{key:"clearEvent",value:function(){this.events.forEach((function(t){var e=t.type,n=t.target,r=t.callback;n.removeEventListener(e,r)}))}}])&&gt(e.prototype,n),r&&gt(e,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function Lt(){wt(this,Ot,Jt).call(this),wt(this,Pt,Qt).call(this),wt(this,jt,Mt).call(this),wt(this,kt,Wt).call(this),wt(this,xt,Ut).call(this),wt(this,Et,Yt).call(this),wt(this,Rt,Gt).call(this),wt(this,It,qt).call(this),wt(this,Tt,Nt).call(this),wt(this,Bt,Dt).call(this)}function Jt(){this.renderer=new ct.CP7({antialias:!0,canvas:this.parent.querySelector("#world")}),this.renderer.shadowMap.enabled=!0,this.renderer.setSize(window.innerWidth,window.innerHeight)}function Mt(){this.scene=new ct.xsS,this.textureLoader=new ct.dpR,this.scene.background=this.textureLoader.load(ft)}function Wt(){var t=window.innerWidth/window.innerHeight;this.camera=new ct.cPb(75,t,.1,1e3),this.camera.position.set(0,10,10),this.scene.add(this.camera)}function Ut(){this.ambientLight=new ct.Mig(3355443),this.directionalLight=new ct.Ox3(16777215,.8),this.directionalLight.position.set(-100,100,0),this.directionalLight.castShadow=!0,this.scene.add(this.ambientLight),this.scene.add(this.directionalLight)}function Qt(){var t=this;this.loadManager=new ct.lLk;var e=this.parent.querySelector(".progressbar"),n=this.parent.querySelector(".progressbarContainer");this.loadManager.onProgress=function(t,n,r){e.value=n/r*100},this.loadManager.onLoad=function(){n.style.display="none",wt(t,_t,Ht).call(t)}}function Yt(){var t=this,e=new ct._12(100,100),n=this.textureLoader.load(pt),r=new ct.Wid({map:n});n.wrapS=ct.rpg,n.wrapT=ct.rpg,n.repeat.set(2,2),this.plane=new ct.Kj0(e,r),this.plane.receiveShadow=!0,this.plane.rotation.x=-.5*Math.PI,this.plane.position.set(10,0,0),this.scene.add(this.plane);var o=[[10,0,0],[20,0,0],[30,0,0],[40,0,0]];this.gltfLoader=new ut.E(this.loadManager);var i=new lt._;i.setDecoderPath("https://cdn.jsdelivr.net/npm/three@0.150.1/examples/jsm/libs/draco/"),this.gltfLoader.setDRACOLoader(i),this.gltfLoader.load(dt,(function(e){var n=e.scene;n.scale.setScalar(.08);for(var r=function(e){var r=new ct.Tme;r.copy(n),r.traverse((function(t){if(t.isMesh)switch(t.castShadow=!0,e){case 0:t.name="Snake";break;case 1:t.name="Tetris";break;case 2:t.name="Ball";break;case 3:t.name="Galaga"}}));var i=mt(o[e],3),a=i[0],c=i[1],s=i[2];r.position.set(a,c,s),r.rotation.y=Math.PI,t.scene.add(r)},i=0;i<4;i++)r(i)}))}function qt(){var t=this;this.animations={},this.speed=0,this.move={forward:!1,backward:!1,left:!1,right:!1},this.clock=new ct.SUY;var e=new st.y(this.loadManager);e.load(At,(function(n){t.character=n,t.character.scale.setScalar(.05),t.character.traverse((function(t){t.isMesh&&(t.castShadow=!0)})),t.character.position.set(10,0,-30),t.scene.add(t.character),t.mixer=new ct.Xcj(t.character);var r=function(e,n){var r=n.animations[0],o=t.mixer.clipAction(r);t.animations[e]={clip:r,action:o}};e.load(bt,(function(t){return r("walk",t)})),e.load(yt,(function(e){r("idle",e),t.animations.idle.action.play()}))}))}function Dt(){var t=this;this.cameraUpdate=function(){var e,n,r=((e=new ct.Pa4(0,15,-20)).applyQuaternion(t.character.quaternion),e.add(t.character.position),e),o=((n=new ct.Pa4(0,5,50)).applyQuaternion(t.character.quaternion),n.add(t.character.position),n);t.camera.position.copy(r),t.camera.lookAt(o)}}function Gt(){this.mouseLocation=new ct.FM8,this.rayCaster=new ct.iMs}function Ht(){var t=this;this.mixer.update(this.clock.getDelta()),this.speed=0,this.cameraUpdate(),(this.move.forward||this.move.backward)&&(this.move.forward?this.speed=.2:this.speed-=.2),this.move.left?this.character.rotateY(.05):this.move.right&&this.character.rotateY(-.05),this.character.translateZ(this.speed),this.renderer.render(this.scene,this.camera),requestAnimationFrame((function(){return wt(t,_t,Ht).call(t)}))}function Nt(){var t=this,e=function(e){var n="keyup"!=e.type;switch(e.key){case"ArrowLeft":t.move.left=n;break;case"ArrowUp":if(t.move.forward=n,n){t.animations.walk.action.play();break}t.mixer.stopAllAction(),t.animations.idle.action.play();break;case"ArrowRight":t.move.right=n;break;case"ArrowDown":if(t.move.backward=n,n){t.animations.walk.action.play();break}t.mixer.stopAllAction(),t.animations.idle.action.play()}};this.events=[];var n=function(e,n,r){t.events.push({type:e,target:n,callback:r}),n.addEventListener(e,r)};n("resize",window,(function(e){var n=e.target,r=n.innerWidth,o=n.innerHeight;t.camera.aspect=r/o,t.camera.updateProjectionMatrix(),t.renderer.setSize(r,o)})),n("click",document,(function(e){t.mouseLocation.x=e.clientX/window.innerWidth*2-1,t.mouseLocation.y=-e.clientY/window.innerHeight*2+1,t.rayCaster.setFromCamera(t.mouseLocation,t.camera);for(var n=t.rayCaster.intersectObjects(t.scene.children),r=["Snake","Tetris","Ball","Galaga"],o=0;o<n.length;o++)if(r.includes(n[o].object.name))return le.push(n[o].object.name),void t.clearEvent()})),n("keydown",document,e),n("keyup",document,e)}function Zt(t){return Zt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Zt(t)}function Ft(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==Zt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==Zt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===Zt(i)?i:String(i)),r)}var o,i}function $t(t,e){return $t=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},$t(t,e)}function Kt(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Xt(t);if(e){var o=Xt(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(t,e){if(e&&("object"===Zt(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,n)}}function Xt(t){return Xt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Xt(t)}var Vt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&$t(t,e)}(i,t);var e,n,r,o=Kt(i);function i(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return e=i,(n=[{key:"setHTML",value:function(){return'<div id="load"></div>\n        <canvas id="world"></canvas>\n        '}},{key:"appendChild",value:function(){var t=this.$target.querySelector("#load");new at(t,{inner:!0}),new zt(this.$target)}}])&&Ft(e.prototype,n),r&&Ft(e,r),Object.defineProperty(e,"prototype",{writable:!1}),i}(c),te="/js-arcadeLand";console.log("production"),console.log(te);const ee=[{path:"".concat(te,"/"),component:Vt},{path:"".concat(te,"/Tetris"),component:A},{path:"".concat(te,"/Ball"),component:v},{path:"".concat(te,"/Snake"),component:H},{path:"".concat(te,"/Galaga"),component:X}];function ne(t){return ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},ne(t)}function re(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==ne(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==ne(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===ne(i)?i:String(i)),r)}var o,i}function oe(t,e){return oe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},oe(t,e)}function ie(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=ae(t);if(e){var o=ae(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return function(t,e){if(e&&("object"===ne(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,n)}}function ae(t){return ae=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},ae(t)}var ce=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&oe(t,e)}(i,t);var e,n,r,o=ie(i);function i(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return e=i,(n=[{key:"setHTML",value:function(){return"\n            <h1>ErrorPage</h1>\n            "}}])&&re(e.prototype,n),r&&re(e,r),Object.defineProperty(e,"prototype",{writable:!1}),i}(c);function se(t){return se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},se(t)}function ue(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,i=void 0,i=function(t,e){if("object"!==se(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==se(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===se(i)?i:String(i)),r)}var o,i}const le=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.errorPage=ce,this.$target=document.querySelector("#app"),this.paths=ee,this.interfaceNavigate()}var e,n,r;return e=t,(n=[{key:"render",value:function(){var t=window.location.pathname,e=this.paths.find((function(e){return e.path===t}));e?new e.component(this.$target):new this.errorPage(this.$target)}},{key:"push",value:function(t){window.history.pushState(null,null,t),this.render()}},{key:"interfaceNavigate",value:function(){var t=this;window.addEventListener("popstate",(function(){t.render()}))}}])&&ue(e.prototype,n),r&&ue(e,r),Object.defineProperty(e,"prototype",{writable:!1}),t}());var fe=n(188),pe={};pe.styleTagTransform=R(),pe.setAttributes=P(),pe.insert=k().bind(null,"head"),pe.domAPI=O(),pe.insertStyleElement=I();w()(fe.Z,pe);fe.Z&&fe.Z.locals&&fe.Z.locals;le.render()},471:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,'.retroContainer{position:relative;box-shadow:0 0 200px gray}#crt::after{content:"";background-color:rgba(179,255,209,.42);opacity:.05;position:absolute;width:1180px;height:50px;top:50%;left:50%;transform:translate(-50%, -50%);animation:effect 4s linear 1s infinite}@keyframes effect{from{top:0px}to{top:1130px}}#crt::before{content:"";display:block;position:absolute;width:1180px;height:1180px;top:50%;left:50%;transform:translate(-50%, -50%);background:linear-gradient(rgb(48, 29, 29), gray);opacity:.5;z-index:1;background-size:100% 4px;pointer-events:none}#retroCanvas{background-color:#2f2f2f;padding:50px}#bezelImg{position:absolute;margin:auto;top:50%;left:50%;transform:translate(-50%, -50%);width:1180px;height:1180px;z-index:2}',"",{version:3,sources:["webpack://./src/style/CrtEffect.scss"],names:[],mappings:"AAAA,gBACI,iBAAA,CACA,yBAAA,CAIA,YACI,UAAA,CACA,sCAAA,CACA,WAAA,CACA,iBAAA,CACA,YAAA,CACA,WAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CACA,sCAAA,CAEJ,kBACI,KACI,OAAA,CAEJ,GACI,UAAA,CAAA,CAGR,aACI,UAAA,CACA,aAAA,CACA,iBAAA,CACA,YAAA,CACA,aAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CACA,iDAAA,CACA,UAAA,CACA,SAAA,CACA,wBAAA,CACA,mBAAA,CAIR,aACI,wBAAA,CACA,YAAA,CAGJ,UACI,iBAAA,CACA,WAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CACA,YAAA,CACA,aAAA,CACA,SAAA",sourcesContent:[".retroContainer {\n    position: relative;\n    box-shadow: 0 0 200px gray;\n}\n\n#crt {\n    &::after {\n        content: '';\n        background-color: rgba(179, 255, 209, 0.42);\n        opacity: 0.05;\n        position: absolute;\n        width: 1180px;\n        height: 50px;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        animation: effect 4s linear 1s infinite;\n    }\n    @keyframes effect {\n        from {\n            top: 0px;\n        }\n        to {\n            top: 1130px;\n        }\n    }\n    &::before {\n        content: '';\n        display: block;\n        position: absolute;\n        width: 1180px;\n        height: 1180px;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background: linear-gradient(rgb(48, 29, 29), gray);\n        opacity: 0.5;\n        z-index: 1;\n        background-size: 100% 4px;\n        pointer-events: none;\n    }\n}\n\n#retroCanvas {\n    background-color: rgb(47, 47, 47);\n    padding: 50px;\n}\n\n#bezelImg {\n    position: absolute;\n    margin: auto;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 1180px;\n    height: 1180px;\n    z-index: 2;\n}\n"],sourceRoot:""}]);const c=a},770:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,".progressbarContainer{position:absolute;top:0;left:0;width:100%;height:100%;top:0;left:0;background-color:#000;display:flex;flex-direction:column;justify-content:center;align-items:center}.progressbar{width:30%}.progressbarContainer>label{color:#fff;font-size:2rem}","",{version:3,sources:["webpack://./src/style/LoadComponent.scss"],names:[],mappings:"AAAA,sBACI,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CACA,KAAA,CACA,MAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CAEJ,aACI,SAAA,CAEJ,4BACI,UAAA,CACA,cAAA",sourcesContent:[".progressbarContainer {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: black;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n.progressbar {\n    width: 30%;\n}\n.progressbarContainer > label {\n    color: white;\n    font-size: 2rem;\n}\n"],sourceRoot:""}]);const c=a},188:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,".progressbarContainer{position:absolute;top:0;left:0;width:100%;height:100%;top:0;left:0;background-color:#000;display:flex;flex-direction:column;justify-content:center;align-items:center}.progressbar{width:30%}.progressbarContainer>label{color:#fff;font-size:2rem}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:rgba(0,0,0,0)}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}#app{width:100vw;height:100vh;display:flex;justify-content:center;align-items:center;background-color:#000;color:#fff}","",{version:3,sources:["webpack://./src/style/LoadComponent.scss","webpack://./src/style/Normalize.scss","webpack://./src/style/index.scss"],names:[],mappings:"AAAA,sBACI,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CACA,KAAA,CACA,MAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CAEJ,aACI,SAAA,CAEJ,4BACI,UAAA,CACA,cAAA,CCnBJ,2EAAA,CAUA,KACI,gBAAA,CACA,6BAAA,CAUJ,KACI,QAAA,CAOJ,KACI,aAAA,CAQJ,GACI,aAAA,CACA,cAAA,CAWJ,GACI,sBAAA,CACA,QAAA,CACA,gBAAA,CAQJ,IACI,+BAAA,CACA,aAAA,CAUJ,EACI,8BAAA,CAQJ,YACI,kBAAA,CACA,yBAAA,CACA,gCAAA,CAOJ,SAEI,kBAAA,CAQJ,cAGI,+BAAA,CACA,aAAA,CAOJ,MACI,aAAA,CAQJ,QAEI,aAAA,CACA,aAAA,CACA,iBAAA,CACA,uBAAA,CAGJ,IACI,cAAA,CAGJ,IACI,UAAA,CAUJ,IACI,iBAAA,CAWJ,sCAKI,mBAAA,CACA,cAAA,CACA,gBAAA,CACA,QAAA,CAQJ,aAGI,gBAAA,CAQJ,cAGI,mBAAA,CAOJ,gDAII,yBAAA,CAOJ,wHAII,iBAAA,CACA,SAAA,CAOJ,4GAII,6BAAA,CAOJ,SACI,0BAAA,CAUJ,OACI,qBAAA,CACA,aAAA,CACA,aAAA,CACA,cAAA,CACA,SAAA,CACA,kBAAA,CAOJ,SACI,uBAAA,CAOJ,SACI,aAAA,CAQJ,6BAEI,qBAAA,CACA,SAAA,CAOJ,kFAEI,WAAA,CAQJ,cACI,4BAAA,CACA,mBAAA,CAOJ,yCACI,uBAAA,CAQJ,6BACI,yBAAA,CACA,YAAA,CAUJ,QACI,aAAA,CAOJ,QACI,iBAAA,CAUJ,SACI,YAAA,CAOJ,SACI,YAAA,CC1VJ,KACI,WAAA,CACA,YAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,qBAAA,CACA,UAAA",sourcesContent:[".progressbarContainer {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: black;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n.progressbar {\n    width: 30%;\n}\n.progressbarContainer > label {\n    color: white;\n    font-size: 2rem;\n}\n","/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n     ========================================================================== */\n\n/**\n   * Remove the margin in all browsers.\n   */\n\nbody {\n    margin: 0;\n}\n\n/**\n   * Render the `main` element consistently in IE.\n   */\n\nmain {\n    display: block;\n}\n\n/**\n   * Correct the font size and margin on `h1` elements within `section` and\n   * `article` contexts in Chrome, Firefox, and Safari.\n   */\n\nh1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n}\n\n/* Grouping content\n     ========================================================================== */\n\n/**\n   * 1. Add the correct box sizing in Firefox.\n   * 2. Show the overflow in Edge and IE.\n   */\n\nhr {\n    box-sizing: content-box; /* 1 */\n    height: 0; /* 1 */\n    overflow: visible; /* 2 */\n}\n\n/**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n\npre {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n     ========================================================================== */\n\n/**\n   * Remove the gray background on active links in IE 10.\n   */\n\na {\n    background-color: transparent;\n}\n\n/**\n   * 1. Remove the bottom border in Chrome 57-\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n   */\n\nabbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    text-decoration: underline dotted; /* 2 */\n}\n\n/**\n   * Add the correct font weight in Chrome, Edge, and Safari.\n   */\n\nb,\nstrong {\n    font-weight: bolder;\n}\n\n/**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n\ncode,\nkbd,\nsamp {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n}\n\n/**\n   * Add the correct font size in all browsers.\n   */\n\nsmall {\n    font-size: 80%;\n}\n\n/**\n   * Prevent `sub` and `sup` elements from affecting the line height in\n   * all browsers.\n   */\n\nsub,\nsup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n}\n\nsub {\n    bottom: -0.25em;\n}\n\nsup {\n    top: -0.5em;\n}\n\n/* Embedded content\n     ========================================================================== */\n\n/**\n   * Remove the border on images inside links in IE 10.\n   */\n\nimg {\n    border-style: none;\n}\n\n/* Forms\n     ========================================================================== */\n\n/**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n}\n\n/**\n   * Show the overflow in IE.\n   * 1. Show the overflow in Edge.\n   */\n\nbutton,\ninput {\n    /* 1 */\n    overflow: visible;\n}\n\n/**\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\n   * 1. Remove the inheritance of text transform in Firefox.\n   */\n\nbutton,\nselect {\n    /* 1 */\n    text-transform: none;\n}\n\n/**\n   * Correct the inability to style clickable types in iOS and Safari.\n   */\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n    -webkit-appearance: button;\n}\n\n/**\n   * Remove the inner border and padding in Firefox.\n   */\n\nbutton::-moz-focus-inner,\n[type='button']::-moz-focus-inner,\n[type='reset']::-moz-focus-inner,\n[type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n}\n\n/**\n   * Restore the focus styles unset by the previous rule.\n   */\n\nbutton:-moz-focusring,\n[type='button']:-moz-focusring,\n[type='reset']:-moz-focusring,\n[type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n}\n\n/**\n   * Correct the padding in Firefox.\n   */\n\nfieldset {\n    padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n   * 1. Correct the text wrapping in Edge and IE.\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\n   * 3. Remove the padding so developers are not caught out when they zero out\n   *    `fieldset` elements in all browsers.\n   */\n\nlegend {\n    box-sizing: border-box; /* 1 */\n    color: inherit; /* 2 */\n    display: table; /* 1 */\n    max-width: 100%; /* 1 */\n    padding: 0; /* 3 */\n    white-space: normal; /* 1 */\n}\n\n/**\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n   */\n\nprogress {\n    vertical-align: baseline;\n}\n\n/**\n   * Remove the default vertical scrollbar in IE 10+.\n   */\n\ntextarea {\n    overflow: auto;\n}\n\n/**\n   * 1. Add the correct box sizing in IE 10.\n   * 2. Remove the padding in IE 10.\n   */\n\n[type='checkbox'],\n[type='radio'] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n}\n\n/**\n   * Correct the cursor style of increment and decrement buttons in Chrome.\n   */\n\n[type='number']::-webkit-inner-spin-button,\n[type='number']::-webkit-outer-spin-button {\n    height: auto;\n}\n\n/**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   */\n\n[type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n}\n\n/**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n\n[type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n}\n\n/**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to `inherit` in Safari.\n   */\n\n::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n}\n\n/* Interactive\n     ========================================================================== */\n\n/*\n   * Add the correct display in Edge, IE 10+, and Firefox.\n   */\n\ndetails {\n    display: block;\n}\n\n/*\n   * Add the correct display in all browsers.\n   */\n\nsummary {\n    display: list-item;\n}\n\n/* Misc\n     ========================================================================== */\n\n/**\n   * Add the correct display in IE 10+.\n   */\n\ntemplate {\n    display: none;\n}\n\n/**\n   * Add the correct display in IE 10.\n   */\n\n[hidden] {\n    display: none;\n}\n","@import './LoadComponent.scss';\n@import './Normalize.scss';\n\n#app {\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    color: white;\n}\n"],sourceRoot:""}]);const c=a}},n={};function r(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return e[t](i,i.exports,r),i.exports}r.m=e,t=[],r.O=(e,n,o,i)=>{if(!n){var a=1/0;for(l=0;l<t.length;l++){for(var[n,o,i]=t[l],c=!0,s=0;s<n.length;s++)(!1&i||a>=i)&&Object.keys(r.O).every((t=>r.O[t](n[s])))?n.splice(s--,1):(c=!1,i<a&&(a=i));if(c){t.splice(l--,1);var u=o();void 0!==u&&(e=u)}}return e}i=i||0;for(var l=t.length;l>0&&t[l-1][2]>i;l--)t[l]=t[l-1];t[l]=[n,o,i]},r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.p="/js-arcadeLand/",(()=>{var t={179:0};r.O.j=e=>0===t[e];var e=(e,n)=>{var o,i,[a,c,s]=n,u=0;if(a.some((e=>0!==t[e]))){for(o in c)r.o(c,o)&&(r.m[o]=c[o]);if(s)var l=s(r)}for(e&&e(n);u<a.length;u++)i=a[u],r.o(t,i)&&t[i]&&t[i][0](),t[i]=0;return r.O(l)},n=self.webpackChunkf_lab_vanilla_project=self.webpackChunkf_lab_vanilla_project||[];n.forEach(e.bind(null,0)),n.push=e.bind(null,n.push.bind(n))})(),r.nc=void 0;var o=r.O(void 0,[960],(()=>r(489)));o=r.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,